{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNZ9t9/KByuJEtvwqkWlo+U"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3U_p5PsZNoEk","executionInfo":{"status":"ok","timestamp":1720070958450,"user_tz":-330,"elapsed":42565,"user":{"displayName":"Sai Varshitha Venigalla","userId":"16489907188603898176"}},"outputId":"804227b5-8922-4529-c39d-dd17690e63fe"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["import os\n","\n","# Provide the source folder\n","src_folder = \"/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets\"\n","# Provide the destination folder\n","dest_folder = \"/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Test\""],"metadata":{"id":"Wi38HVEKN8xx","executionInfo":{"status":"ok","timestamp":1720071175674,"user_tz":-330,"elapsed":437,"user":{"displayName":"Sai Varshitha Venigalla","userId":"16489907188603898176"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["# Find all subfolders in the source folder src_folder\n","directory_contents = os.listdir(src_folder)\n","print('directory_contents: ', directory_contents)\n","\n","# Append the path of the src_folder with the sub-folders\n","sub_folders = []\n","for item in directory_contents:\n","  if os.path.isdir(os.path.join(src_folder,item)):\n","    sub_folders.append(item)\n","print('sub_folders: ', sub_folders)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PX1LbLtpOQ2W","executionInfo":{"status":"ok","timestamp":1720071177585,"user_tz":-330,"elapsed":11,"user":{"displayName":"Sai Varshitha Venigalla","userId":"16489907188603898176"}},"outputId":"7481caa3-2f3d-4c89-fc8c-e8ce270d36d7"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["directory_contents:  ['not_skin_cancer', 'skin_cancer']\n","sub_folders:  ['not_skin_cancer', 'skin_cancer']\n"]}]},{"cell_type":"code","source":["import os\n","\n","# Create the same folder structure in destination\n","for folder_name in sub_folders:\n","  # Check if the directory already exists\n","  if not os.path.exists(os.path.join(dest_folder,folder_name)):\n","    os.mkdir(os.path.join(dest_folder,folder_name)) # Create the directory only if it doesn't exist"],"metadata":{"id":"Zt1WyEIOOVYs","executionInfo":{"status":"ok","timestamp":1720071180626,"user_tz":-330,"elapsed":456,"user":{"displayName":"Sai Varshitha Venigalla","userId":"16489907188603898176"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["# List full paths of all images in each category/sub-folder\n","list_files = []\n","# Find all the files, note that you have to change it to tif if that is the extension\n","for folder_name in directory_contents:\n","  files_list = [_ for _ in os.listdir(os.path.join(src_folder, folder_name))]\n","  # Create the list with full path\n","  full_path_files_list = []\n","  for file_name in files_list:\n","    full_path_files_list.append(os.path.join(src_folder, folder_name, file_name))\n","  list_files.append(full_path_files_list)\n","print(list_files[1])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hhy3D2wjOgNf","executionInfo":{"status":"ok","timestamp":1720071185579,"user_tz":-330,"elapsed":545,"user":{"displayName":"Sai Varshitha Venigalla","userId":"16489907188603898176"}},"outputId":"ca2bcdf0-f254-4b7f-88f1-39ac9084ba56"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["['/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_105.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_102.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_107.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_109.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_106.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_101.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_103.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_100.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_108.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_111.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_110.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_116.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_112.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_113.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_114.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_25.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_26.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_38.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_34.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_33.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_31.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_36.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_32.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_35.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_30.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_37.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_28.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_27.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_44.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_49.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_48.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_42.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_50.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_46.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_40.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_45.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_43.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_41.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_39.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_54.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_59.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_58.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_51.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_55.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_56.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_53.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_57.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_60.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_61.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_72.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_67.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_70.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_66.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_65.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_68.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_71.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_62.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_63.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_64.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_77.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_76.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_75.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_78.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_79.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_74.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_80.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_73.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_81.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_87.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_83.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_84.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_82.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_88.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_86.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_85.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_97.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_91.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_92.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_96.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_90.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_94.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_95.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_98.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_99.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_117.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_118.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_121.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_122.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_120.jpg']\n"]}]},{"cell_type":"code","source":["import random\n","\n","# Specify the fraction\n","#this is the splitting percentage. 10% will be sent to validation\n","x = 30\n","\n","for files_list in list_files:\n","  # length of the list\n","  list_len = len(files_list)\n","  # length of x%\n","  frac_len = int(list_len * (x/100))\n","  # select x% of files\n","  files_to_move = random.sample(files_list, frac_len)\n","  for single_file in files_to_move:\n","    # extract the sub-string with subfolder/category and file name\n","    subfolder_file = '/'.join(single_file.split('/')[-2:])\n","    # destination path\n","    dst_folder = os.path.join(dest_folder, subfolder_file)\n","    # Move the file\n","    os.replace(single_file, dst_folder)"],"metadata":{"id":"hKjAM5hYOhxD","executionInfo":{"status":"ok","timestamp":1720071192300,"user_tz":-330,"elapsed":438,"user":{"displayName":"Sai Varshitha Venigalla","userId":"16489907188603898176"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["for folder_name in sub_folders:\n","  print(folder_name, len(os.listdir(os.path.join(dest_folder,folder_name))))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Apyc5BHXOmAW","executionInfo":{"status":"ok","timestamp":1720071196892,"user_tz":-330,"elapsed":432,"user":{"displayName":"Sai Varshitha Venigalla","userId":"16489907188603898176"}},"outputId":"079972ad-2480-4986-eae2-b13faac671fe"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["not_skin_cancer 35\n","skin_cancer 35\n"]}]},{"cell_type":"code","source":["import os\n","\n","# Provide the source folder\n","src_folder = \"/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets\"\n","# Provide the destination folder\n","dest_folder = \"/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Valid\""],"metadata":{"id":"1zBLSBpgOp5A","executionInfo":{"status":"ok","timestamp":1720071200812,"user_tz":-330,"elapsed":9,"user":{"displayName":"Sai Varshitha Venigalla","userId":"16489907188603898176"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["# Find all subfolders in the source folder src_folder\n","directory_contents = os.listdir(src_folder)\n","print('directory_contents: ', directory_contents)\n","\n","# Append the path of the src_folder with the sub-folders\n","sub_folders = []\n","for item in directory_contents:\n","  if os.path.isdir(os.path.join(src_folder,item)):\n","    sub_folders.append(item)\n","print('sub_folders: ', sub_folders)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LGYJ2iO9O6jR","executionInfo":{"status":"ok","timestamp":1720071214762,"user_tz":-330,"elapsed":9,"user":{"displayName":"Sai Varshitha Venigalla","userId":"16489907188603898176"}},"outputId":"1da81dc9-41ab-4a92-dddb-9cf5115a9ff7"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["directory_contents:  ['not_skin_cancer', 'skin_cancer']\n","sub_folders:  ['not_skin_cancer', 'skin_cancer']\n"]}]},{"cell_type":"code","source":["import os\n","\n","# Create the same folder structure in destination\n","for folder_name in sub_folders:\n","  # Check if the directory already exists\n","  if not os.path.exists(os.path.join(dest_folder,folder_name)):\n","    os.mkdir(os.path.join(dest_folder,folder_name)) # Create the directory only if it doesn't exist"],"metadata":{"id":"0b6gNkIqO99S","executionInfo":{"status":"ok","timestamp":1720071232234,"user_tz":-330,"elapsed":8,"user":{"displayName":"Sai Varshitha Venigalla","userId":"16489907188603898176"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["# List full paths of all images in each category/sub-folder\n","list_files = []\n","# Find all the files, note that you have to change it to tif if that is the extension\n","for folder_name in directory_contents:\n","  files_list = [_ for _ in os.listdir(os.path.join(src_folder, folder_name))]\n","  # Create the list with full path\n","  full_path_files_list = []\n","  for file_name in files_list:\n","    full_path_files_list.append(os.path.join(src_folder, folder_name, file_name))\n","  list_files.append(full_path_files_list)\n","print(list_files[1])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"89P1YhbfPBuI","executionInfo":{"status":"ok","timestamp":1720071243675,"user_tz":-330,"elapsed":462,"user":{"displayName":"Sai Varshitha Venigalla","userId":"16489907188603898176"}},"outputId":"af47f305-abf3-4c00-d9b0-64d7d030bb85"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["['/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_105.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_107.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_109.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_106.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_100.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_108.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_111.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_110.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_116.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_113.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_114.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_26.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_38.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_36.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_32.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_35.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_30.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_27.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_44.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_49.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_48.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_42.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_46.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_40.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_45.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_43.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_41.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_39.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_59.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_58.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_51.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_56.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_53.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_57.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_60.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_72.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_67.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_70.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_66.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_63.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_64.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_77.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_78.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_74.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_80.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_73.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_81.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_87.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_83.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_84.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_82.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_86.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_85.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_97.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_91.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_92.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_90.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_94.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_98.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_117.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_118.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_122.jpg', '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/skin_cancer/skin_cancer_120.jpg']\n"]}]},{"cell_type":"code","source":["import random\n","\n","# Specify the fraction\n","#this is the splitting percentage. 10% will be sent to validation\n","x = 10\n","\n","for files_list in list_files:\n","  # length of the list\n","  list_len = len(files_list)\n","  # length of x%\n","  frac_len = int(list_len * (x/100))\n","  # select x% of files\n","  files_to_move = random.sample(files_list, frac_len)\n","  for single_file in files_to_move:\n","    # extract the sub-string with subfolder/category and file name\n","    subfolder_file = '/'.join(single_file.split('/')[-2:])\n","    # destination path\n","    dst_folder = os.path.join(dest_folder, subfolder_file)\n","    # Move the file\n","    os.replace(single_file, dst_folder)"],"metadata":{"id":"CakjfHjFPE7g","executionInfo":{"status":"ok","timestamp":1720071263015,"user_tz":-330,"elapsed":433,"user":{"displayName":"Sai Varshitha Venigalla","userId":"16489907188603898176"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["for folder_name in sub_folders:\n","  print(folder_name, len(os.listdir(os.path.join(dest_folder,folder_name))))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zdnZBEgrPJtB","executionInfo":{"status":"ok","timestamp":1720071275865,"user_tz":-330,"elapsed":469,"user":{"displayName":"Sai Varshitha Venigalla","userId":"16489907188603898176"}},"outputId":"2bdb3db7-90af-4672-aafa-340813251e04"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["not_skin_cancer 6\n","skin_cancer 6\n"]}]},{"cell_type":"code","source":["\n","# Please replace the brackets below with the drive location of your folders which included subfolders for images\n","# Sample path: /content/drive/My Drive/ImageClassification\n","TRAINING_PATH = '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets'\n","VALIDATION_PATH = '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Valid'"],"metadata":{"id":"XIvichrGPM7b","executionInfo":{"status":"ok","timestamp":1720071400049,"user_tz":-330,"elapsed":451,"user":{"displayName":"Sai Varshitha Venigalla","userId":"16489907188603898176"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["def create_model(base_model, num_classes):\n","    import tensorflow as tf\n","    # Grab the last layer and add a few extra layers to it\n","    x=base_model.output\n","    x=GlobalAveragePooling2D()(x)\n","    # Dense layer 1\n","    x=tf.keras.layers.Dense(100,activation='relu', kernel_initializer=tf.keras.initializers.VarianceScaling(), use_bias=True)(x)\n","\n","    # Final layer with softmax activation\n","    preds=tf.keras.layers.Dense(num_classes,activation='softmax', kernel_initializer=tf.keras.initializers.VarianceScaling(), use_bias=False)(x)\n","\n","    # Create the final model\n","    model=Model(inputs=base_model.input,outputs=preds)\n","    return model\n"],"metadata":{"id":"LE-ziSs_Ptut","executionInfo":{"status":"ok","timestamp":1720071415918,"user_tz":-330,"elapsed":435,"user":{"displayName":"Sai Varshitha Venigalla","userId":"16489907188603898176"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["def get_optimizer(optimizer_name, learning_rate):\n","    # Import keras optimizers\n","    from tensorflow.keras.optimizers import Adam, Adadelta, Adagrad, Adamax, Ftrl, Nadam, RMSprop, SGD\n","    print('Selected Optimizer', optimizer_name)\n","    switcher = {\n","        'Adadelta': Adadelta(learning_rate=learning_rate),\n","        'Adagrad': Adagrad(learning_rate=learning_rate),\n","        'Adam': Adam(learning_rate=learning_rate),\n","        'Adamax': Adamax(learning_rate=learning_rate),\n","        'FTRL': Ftrl(learning_rate=learning_rate),\n","        'NAdam': Nadam(learning_rate=learning_rate),\n","        'RMSprop': RMSprop(learning_rate=learning_rate),\n","        'Gradient Descent': SGD(learning_rate=learning_rate)\n","    }\n","    # If optimizer_name is empty, Adam will be return as default optimizer\n","    return switcher.get(optimizer_name, Adam(learning_rate=learning_rate))\n"],"metadata":{"id":"GTD83JtTPvKd","executionInfo":{"status":"ok","timestamp":1720071429122,"user_tz":-330,"elapsed":487,"user":{"displayName":"Sai Varshitha Venigalla","userId":"16489907188603898176"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["# Import necessary libraries\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import os\n","import tensorflow as tf\n","\n","from keras.applications.mobilenet_v2 import preprocess_input\n","from keras.preprocessing.image import ImageDataGenerator\n","from keras.layers import Dense, GlobalAveragePooling2D\n","from keras.models import Model\n","from keras.callbacks import EarlyStopping\n","\n","# Initialize hyperparameters\n","epochs = 10\n","base_learning_rate = 0.01\n","optimizer = 'Adam'\n","BATCH_SIZE = 32\n","IMG_SIZE = (224, 224)\n","\n","# Create data generators for training and validation\n","train_datagen = ImageDataGenerator(preprocessing_function=preprocess_input)\n","validation_datagen = ImageDataGenerator(preprocessing_function=preprocess_input)\n","\n","train_generator = train_datagen.flow_from_directory(TRAINING_PATH,\n","                                                   target_size=IMG_SIZE,\n","                                                   color_mode='rgb',\n","                                                   batch_size=BATCH_SIZE,\n","                                                   class_mode='categorical',\n","                                                   shuffle=True)\n","\n","validation_generator = validation_datagen.flow_from_directory(VALIDATION_PATH,\n","                                                             target_size=IMG_SIZE,\n","                                                             color_mode='rgb',\n","                                                             batch_size=BATCH_SIZE,\n","                                                             class_mode='categorical',\n","                                                             shuffle=True)\n","\n","# Download the MobileNetV2 model with specified parameters\n","base_model = tf.keras.applications.MobileNetV2(input_shape=(224, 224, 3), include_top=False, weights='imagenet', alpha=0.35)\n","\n","# Freeze the layers of the base model\n","for layer in base_model.layers:\n","    layer.trainable = False\n","\n","# **Determine the number of classes from the training data**\n","num_classes = len(train_generator.class_indices)\n","print(\"Number of classes found: \", num_classes) # Add this line to verify\n","\n","# Create the top layers for classification\n","x = base_model.output\n","x = GlobalAveragePooling2D()(x)\n","x = Dense(1024, activation='relu')(x)  # Add more dense layers as needed\n","predictions = Dense(num_classes, activation='softmax')(x) # Update num_classes here\n","\n","# Combine base model and top layers into a new model\n","model = Model(inputs=base_model.input, outputs=predictions)\n","\n","# Compile the model with optimizer, loss function, and metrics\n","model.compile(optimizer=tf.keras.optimizers.Adam(lr=base_learning_rate),\n","              loss='categorical_crossentropy',\n","              metrics=['accuracy'])\n","\n","# Define early stopping to prevent overfitting\n","early_stopping_monitor = EarlyStopping(\n","    monitor='val_loss',\n","    min_delta=0,\n","    patience=30,\n","    verbose=0,\n","    mode='auto',\n","    restore_best_weights=True\n",")\n","\n","# Train the model\n","history_fine = model.fit(train_generator,\n","                         epochs=epochs,\n","                         validation_data=validation_generator,\n","                         callbacks=[early_stopping_monitor],\n","                         verbose=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pkdPiFR9PyE3","executionInfo":{"status":"ok","timestamp":1720074770878,"user_tz":-330,"elapsed":31052,"user":{"displayName":"Sai Varshitha Venigalla","userId":"16489907188603898176"}},"outputId":"491b5215-a8d2-48cd-b536-265ef3dd043e"},"execution_count":41,"outputs":[{"output_type":"stream","name":"stdout","text":["Found 114 images belonging to 2 classes.\n","Found 12 images belonging to 2 classes.\n"]},{"output_type":"stream","name":"stderr","text":["WARNING:absl:`lr` is deprecated in Keras optimizer, please use `learning_rate` or use the legacy optimizer, e.g.,tf.keras.optimizers.legacy.Adam.\n"]},{"output_type":"stream","name":"stdout","text":["Number of classes found:  2\n","Epoch 1/10\n","4/4 [==============================] - 7s 1s/step - loss: 0.8062 - accuracy: 0.6404 - val_loss: 0.4634 - val_accuracy: 0.7500\n","Epoch 2/10\n","4/4 [==============================] - 2s 447ms/step - loss: 0.2441 - accuracy: 0.9298 - val_loss: 0.0747 - val_accuracy: 1.0000\n","Epoch 3/10\n","4/4 [==============================] - 2s 515ms/step - loss: 0.2102 - accuracy: 0.9123 - val_loss: 0.1749 - val_accuracy: 0.9167\n","Epoch 4/10\n","4/4 [==============================] - 2s 505ms/step - loss: 0.1468 - accuracy: 0.9386 - val_loss: 0.0872 - val_accuracy: 1.0000\n","Epoch 5/10\n","4/4 [==============================] - 2s 459ms/step - loss: 0.0841 - accuracy: 0.9737 - val_loss: 0.1642 - val_accuracy: 0.9167\n","Epoch 6/10\n","4/4 [==============================] - 2s 494ms/step - loss: 0.0507 - accuracy: 0.9912 - val_loss: 0.1570 - val_accuracy: 0.9167\n","Epoch 7/10\n","4/4 [==============================] - 4s 971ms/step - loss: 0.0271 - accuracy: 0.9912 - val_loss: 0.0977 - val_accuracy: 0.9167\n","Epoch 8/10\n","4/4 [==============================] - 2s 409ms/step - loss: 0.0103 - accuracy: 1.0000 - val_loss: 0.0934 - val_accuracy: 1.0000\n","Epoch 9/10\n","4/4 [==============================] - 2s 524ms/step - loss: 0.0108 - accuracy: 1.0000 - val_loss: 0.1022 - val_accuracy: 0.9167\n","Epoch 10/10\n","4/4 [==============================] - 2s 406ms/step - loss: 0.0044 - accuracy: 1.0000 - val_loss: 0.1312 - val_accuracy: 0.9167\n"]}]},{"cell_type":"code","source":["import os\n","\n","MODEL_PATH = \"/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Best Model\"\n","MODEL_NAME = \"Skin_Cancer_Detection.10.0.01.h5\"\n","model.save(os.path.join(MODEL_PATH, MODEL_NAME))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6A8W9ffmUy-w","executionInfo":{"status":"ok","timestamp":1720075008536,"user_tz":-330,"elapsed":1469,"user":{"displayName":"Sai Varshitha Venigalla","userId":"16489907188603898176"}},"outputId":"28749a6e-0e59-40fe-f112-0884aaaa02e9"},"execution_count":42,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/keras/src/engine/training.py:3103: UserWarning: You are saving your model as an HDF5 file via `model.save()`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')`.\n","  saving_api.save_model(\n"]}]},{"cell_type":"code","source":["def visualization():\n","    import pandas as pd\n","    df = pd.DataFrame(history_fine.history)\n","    #loss plots\n","    plt.figure(figsize=(8,8))\n","    plt.plot(df['loss'], color='red', label = \"Training_loss\")\n","    plt.plot(df['val_loss'], color='blue')\n","    plt.legend(['Training Loss','Validation loss'],loc = 'best' )\n","    plt.title('Line plot of Training and Validation loss')\n","    plt.ylim(0,1)\n","    plt.show()\n","\n","    #accuracy plots\n","    plt.figure(figsize=(8,8))\n","    plt.plot(df['accuracy'], color='red')\n","    plt.plot(df['val_accuracy'], color='blue')\n","    plt.legend(['Training acc','Validation acc'],loc = 'best' )\n","    plt.title('Line plot of Training and Validation Accuracies')\n","    plt.ylim(0,1)\n","    plt.show()\n","\n","visualization()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"hhProfqzV-6J","executionInfo":{"status":"ok","timestamp":1720075014805,"user_tz":-330,"elapsed":946,"user":{"displayName":"Sai Varshitha Venigalla","userId":"16489907188603898176"}},"outputId":"b953d8ec-0a6f-4629-c1c5-291a313a4b29"},"execution_count":43,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["\n","# Import numpy for calculating best model accuracy\n","import numpy as np\n","# Populating matrics -> accuracy & loss\n","acc = history_fine.history['accuracy']\n","val_acc = history_fine.history['val_accuracy']\n","\n","loss = history_fine.history['loss']\n","val_loss = history_fine.history['val_loss']\n","\n","print('Training Accuracy: ', acc)\n","print('Validation Accuracy: ', val_acc)\n","print('Training Loss: ', loss)\n","print('Validation Loss: ', val_loss)\n","best_model_accuracy = history_fine.history['val_accuracy'][np.argmin(history_fine.history['val_loss'])]\n","print('best model accuracy: ', best_model_accuracy)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DzUOhnU_V_wB","executionInfo":{"status":"ok","timestamp":1720075080453,"user_tz":-330,"elapsed":560,"user":{"displayName":"Sai Varshitha Venigalla","userId":"16489907188603898176"}},"outputId":"0f34a0c2-75cd-4360-81f8-7a1de1739e1f"},"execution_count":44,"outputs":[{"output_type":"stream","name":"stdout","text":["Training Accuracy:  [0.640350878238678, 0.9298245906829834, 0.9122806787490845, 0.9385964870452881, 0.9736841917037964, 0.9912280440330505, 0.9912280440330505, 1.0, 1.0, 1.0]\n","Validation Accuracy:  [0.75, 1.0, 0.9166666865348816, 1.0, 0.9166666865348816, 0.9166666865348816, 0.9166666865348816, 1.0, 0.9166666865348816, 0.9166666865348816]\n","Training Loss:  [0.8062460422515869, 0.2441016137599945, 0.21024766564369202, 0.14684617519378662, 0.08413289487361908, 0.05066535249352455, 0.027120869606733322, 0.01029914803802967, 0.010831600986421108, 0.004443099722266197]\n","Validation Loss:  [0.46338751912117004, 0.07465074211359024, 0.1748930811882019, 0.08724135160446167, 0.16415931284427643, 0.15696237981319427, 0.09773372858762741, 0.09342291951179504, 0.10220617055892944, 0.13121628761291504]\n","best model accuracy:  1.0\n"]}]},{"cell_type":"code","source":["def seperate_labels(generator):\n","    x_validation = []\n","    y_validation = []\n","    num_seen = 0\n","\n","    for x, labels in generator:\n","        x_validation.append(x)\n","        y_validation.append([argmax(label) for label in labels])\n","        num_seen += len(x)\n","        if num_seen == generator.n: break\n","\n","    x_validation = np.concatenate(x_validation)\n","    y_validation = np.concatenate(y_validation)\n","    return x_validation, y_validation\n"],"metadata":{"id":"ruRXrLt5dxpa","executionInfo":{"status":"ok","timestamp":1720075101863,"user_tz":-330,"elapsed":451,"user":{"displayName":"Sai Varshitha Venigalla","userId":"16489907188603898176"}}},"execution_count":45,"outputs":[]},{"cell_type":"code","source":["\n","# Calculate and display the confusion matrix\n","import matplotlib.pyplot as plt\n","from numpy.core.fromnumeric import argmax\n","from sklearn.metrics import ConfusionMatrixDisplay\n","\n","x_validation, y_validation = seperate_labels(validation_generator)\n","y_pred = model.predict(x_validation, batch_size=BATCH_SIZE)\n","predictions = np.apply_along_axis(argmax, 1, y_pred)\n","display_labels = validation_generator.class_indices.keys()\n","\n","# ConfusionMatrixDisplay.from_predictions(y_validation, predictions, display_labels=display_labels, cmap=\"binary\")\n","# plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Wni0vC8Rd1I1","executionInfo":{"status":"ok","timestamp":1720075118193,"user_tz":-330,"elapsed":2659,"user":{"displayName":"Sai Varshitha Venigalla","userId":"16489907188603898176"}},"outputId":"95f1262e-3671-4e9f-e9e3-e2297f5a9c27"},"execution_count":46,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 1s 1s/step\n"]}]},{"cell_type":"code","source":["import seaborn as sns\n","from sklearn.metrics import confusion_matrix, classification_report\n","plt.figure(figsize = (5,5))\n","sns.heatmap(confusion_matrix(y_validation, predictions), annot = True, fmt = 'g', cmap = \"Blues\",xticklabels=display_labels, yticklabels=display_labels)\n","plt.title(\"Confusion Matrix\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":468},"id":"KqDU6S8Zd3fS","executionInfo":{"status":"ok","timestamp":1720075134401,"user_tz":-330,"elapsed":1560,"user":{"displayName":"Sai Varshitha Venigalla","userId":"16489907188603898176"}},"outputId":"562fdd47-c31f-45d0-bbd8-5677d9446cbe"},"execution_count":47,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 500x500 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["print(classification_report(y_validation, predictions))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1L4TxCn4eLaW","executionInfo":{"status":"ok","timestamp":1720075207564,"user_tz":-330,"elapsed":473,"user":{"displayName":"Sai Varshitha Venigalla","userId":"16489907188603898176"}},"outputId":"b76bb4ff-fc35-4c84-f669-55882645a59e"},"execution_count":48,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.86      1.00      0.92         6\n","           1       1.00      0.83      0.91         6\n","\n","    accuracy                           0.92        12\n","   macro avg       0.93      0.92      0.92        12\n","weighted avg       0.93      0.92      0.92        12\n","\n"]}]},{"cell_type":"code","source":["\n","# Predicting code for an image\n","from tensorflow.keras.preprocessing import image\n","# Please replace the brackets below with the location of your image which need to predict\n","img_path = '/content/drive/MyDrive/AIClub_AP_Venigalla_Varshitha/Project/Data Set/Train/Datasets/not_skin_cancer/not_skin_cancer_00.jpg'\n","img = image.load_img(img_path, target_size=IMG_SIZE)\n","img_array = image.img_to_array(img)\n","img_batch = np.expand_dims(img_array, axis=0)\n","img_preprocessed = preprocess_input(img_batch)\n","prediction = model.predict(img_preprocessed)\n","print(prediction)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"danoVxtxeTUx","executionInfo":{"status":"ok","timestamp":1720075282148,"user_tz":-330,"elapsed":667,"user":{"displayName":"Sai Varshitha Venigalla","userId":"16489907188603898176"}},"outputId":"6503d1b1-5d45-4729-9ab8-821763358c6c"},"execution_count":49,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 36ms/step\n","[[9.9985790e-01 1.4210424e-04]]\n"]}]}]}